---
title: "Article Layout"
---

### Margin Figures

Figures that you create using code cells can be placed in the margin by using the `column: margin` code cell option. If the code produces more than one figure, each of the figures will be placed in the margin.

```{r}
#| label: fig-mtcars
#| fig-cap: "MPG vs horsepower, colored by transmission."
#| column: margin
#| echo: fenced

library(ggplot2)
mtcars2 <- mtcars
mtcars2$am <- factor(
  mtcars$am, labels = c('automatic', 'manual')
)
ggplot(mtcars2, aes(hp, mpg, color = am)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "loess") +
  theme(legend.position = 'bottom')
```

### Margin Tables

You an also place tables in the margin of your document by specifying `column: margin`.

```{r}
#| column: margin
#| echo: fenced

knitr::kable(
  mtcars[1:6, 1:3]
)
```

### Multiple Outputs

You can also target specific output types (for example, figures) to be placed in the margin. For example, the following code will render a table summarizing the `mtcars` dataset and render a lot of the data in the margin next to the table.

```{r}
#| fig-column: margin
#| echo: fenced

mtcars2 <- mtcars
mtcars2$am <- factor(
  mtcars$am, labels = c('automatic', 'manual')
)

knitr::kable(
  mtcars[1:6, 1:6]
)

library(ggplot2)
ggplot(mtcars2, aes(hp, mpg, color = am)) +
  geom_point() +
  geom_smooth(formula = y ~ x, method = "loess") +
  theme(legend.position = 'bottom')
```
